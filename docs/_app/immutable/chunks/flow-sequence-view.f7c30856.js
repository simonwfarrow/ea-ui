import{a as h,c as w,b as F,d as y}from"./c4.0576f5b7.js";import"./js-yaml.38530ef5.js";import{F as S}from"./FlowRepositoryGitHub.fbc76b32.js";const C=async(e,r,t)=>{let n="",s=new Map,i={index:0},o=[];n+=y();for(let l in e.steps)o.push(c(e.steps[l],s,t));await Promise.all(o),n+=b(s,r);for(let l in e.steps)await f(e.steps[l],i,t,s,r).then(a=>n+=a);return n+=h(),Promise.resolve(n)},c=async(e,r,t)=>{var s,i;let n=[];e.$ref!=null?n.push(d(e.$ref,t).then(o=>{for(let l in o.steps)n.push(c(o.steps[l],r,t))})):(((s=e.producer)==null?void 0:s.name)!=null&&(r.has(e.producer.name)||r.set(e.producer.name,e.producer)),((i=e.consumer)==null?void 0:i.name)!=null&&(r.has(e.consumer.name)||r.set(e.consumer.name,e.consumer)));for(let o in e.steps)n.push(c(e.steps[o],r,t));await Promise.all(n)},d=async(e,r)=>{const t=new S;return r.path=e,t.getFlow(r)};function b(e,r){let t="";return e.forEach((n,s)=>{const[i,o]=p(s,e,r);t+=w(i,o)}),t}function p(e,r,t){let n=r.get(e),s=e,i="";if(n!=null&&n.$ref!=null){const o=t.find(l=>l._path===(n==null?void 0:n.$ref));o!=null&&(s=o.name,i=o.description)}return[s,i]}const f=async(e,r,t,n,s)=>{var o,l;let i="";if(e.$ref!=null){const a=await d(e.$ref,t);for(let u in a.steps)await f(a.steps[u],r,t,n,s).then(m=>{i+=m})}if(((o=e.producer)==null?void 0:o.name)!=null&&((l=e.consumer)==null?void 0:l.name)!=null){const[a,u]=p(e.producer.name,n,s),[m,N]=p(e.consumer.name,n,s);i+=F(a,m,e.description,r.index++)}for(let a in e.steps)await f(e.steps[a],r,t,n,s).then(u=>i+=u);return i};export{C as c};
